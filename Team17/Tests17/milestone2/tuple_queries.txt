1 - Tuple test 1 Follows
assign a, a1; print pn;
Select <pn> such that Follows(a, a1)
1, 15, 19
5000
2 - Tuple test 2 Follows
assign a, a1; print pn; read rd;
Select <pn, rd> such that Follows(a, a1)
1 6, 15 6, 19 6, 1 16, 15 16, 19 16, 1 20, 15 20, 19 20
5000
3 - Tuple test 3 Follows
print pn; read rd;
Select <pn, rd> such that Follows(pn, rd)
19 20, 15 16
5000
4 - Tuple test 4 Follows
call c1, c2;
Select <c1.stmt#, c2.stmt#> such that Follows(c1, c2)
2 3
5000
5 - Tuple test 5 Follows
call c1, c2;
Select <c1.stmt#, c2.procName> such that Follows(c1, c2)
2 first
5000
6 - Tuple test 6 Follows
assign a; call c1, c2;
Select <a, c2.procName> such that Follows(c1, c2)
7 first, 11 first, 12 first, 17 first, 18 first
5000
7 - Tuple test 7 Follows
assign a; call c1, c2;
Select <c2.procName> such that Follows(1, c2)
second
5000
8 - Tuple test 8 Follows
assign a; call c1, c2;
Select <a> such that Follows(1, c2)
7, 11, 12, 17, 18
5000
9 - Tuple test 9 Follows
assign a, a1; call c1, c2;
Select <a, a1> such that Follows(6, a)
7 7, 7 11, 7 12, 7 17, 7 18
5000
10 - Tuple test 10 Follows
assign a; call c1, c2; print pn;
Select <a> such that Follows(1, pn)
none
5000
11 - Tuple test 11 Follows
assign a; call c1, c2; print pn; variable v;
Select <v.varName, rd> such that Follows(rd, 7)
var1 6, var2 6, var3 6, var4 6, var5 6, assign 6, Second 6, second 6, while 6, While 6, CS3203 6, A 6, F 6, pass 6
5000
12 - Tuple test 12 Follows
assign a; call c1, c2; print pn; variable v;
Select <a.stmt#, rd.varName> such that Follows(1, 2)
7 var2, 11 var2, 12 var2, 17 var2, 18 var2, 7 second, 11 second, 12 second, 17 second, 18 second, 7 var1, 11 var1, 12 var1, 17 var1, 18 var1
5000
13 - Tuple test 13 Follows
assign a; call c1, c2; print pn; variable v;
Select <a.stmt#, rd.varName> such that Follows(1, 4)
none
5000
14 - Tuple test 14 Follows
assign a; call c1, c2; print pn; variable v; while while;
Select <while.stmt#> such that Follows(1, 2)
4, 9, 14
5000
15 - Tuple test 1 Follows*
assign a, a1; print pn; read rd; call c;
Select <rd> such that Follows*(rd, c)
6
5000
16 - Tuple test 2 Follows*
assign a, a1; print pn; read rd; call c;
Select <rd, a> such that Follows*(rd, c)
6 7, 6 11, 6 12, 6 17, 6 18
5000
17 - Tuple test 3 Follows*
print pn; read rd; assign a;
Select <a.stmt#, rd> such that Follows*(a, rd)
18 20
5000
18 - Tuple test 4 Follows*
call c1, c2;
Select <c1.stmt#, c2.stmt#> such that Follows*(c1, c2)
2 3
5000
19 - Tuple test 5 Follows*
call c1, c2;
Select <c1.stmt#, c2.procName> such that Follows*(1, c2)
2 second, 2 first, 3 second, 3 first
5000
20 - Tuple test 6 Follows*
assign a; call c1, c2;
Select <a, c2.procName> such that Follows*(1, 5)
none
5000
21 - Tuple test 7 Follows*
assign a; call c1, c2; procedure p;
Select <p.procName> such that Follows*(a, 8)
first, second, procedure, island
5000
22 - Tuple test 8 Follows*
assign a; call c1, c2; procedure p;
Select <p.procName, a> such that Follows*(a, 8)
first 7, second 7, procedure 7, island 7, first 11, second 11, procedure 11, island 11, first 12, second 12, procedure 12, island 12, first 17, second 17, procedure 17, island 17, first 18, second 18, procedure 18, island 18
5000
23 - Tuple test 9 Follows*
assign a, a1; print pn; read rd; call c;
Select <rd, c> such that Follows*(rd, c)
6 8
5000
24 - Tuple test 1 ModifiesS
assign a, a1; variable v; print pn; read rd; call c;
Select <rd, v> such that Modifies (rd, v)
6 var2, 16 second, 20 var1
5000
25 - Tuple test 2 ModifiesS
assign a, a1; variable v; print pn; read rd; call c; procedure p;
Select <p, v> such that Modifies (rd, v)
procedure var2, procedure second, procedure var1, first var2, first second, first var1, second var2, second second, second var1, island var2, island second, island var1
5000
26 - Tuple test 3 ModifiesS
assign a, a1; variable v; print pn; read rd; call c;
Select <rd, v> such that Modifies (rd, "Second")
none
5000
27 - Tuple test 4 ModifiesS
assign a, a1; variable v; print pn; read rd; call c; while w;
Select <w> such that Modifies (w, "var2")
4
5000
28 - Tuple test 5 ModifiesS
assign a, a1; variable v; print pn; read rd; call c; while w;
Select <w, w.stmt#> such that Modifies (w, "var2")
4 4
5000
29 - Tuple test 6 ModifiesS
assign a, a1; variable v; print pn; read rd; call c; while w;
Select <w, w.stmt#> such that Modifies (w, v)
4 4, 9 9, 14 14
5000
30 - Tuple test 7 ModifiesS
assign a, a1; variable v; print pn; read rd; call c; while w;
Select <w, w.stmt#, pn> such that Modifies (w, v)
4 4 1, 9 9 1, 14 14 1, 4 4 15, 9 9 15, 14 14 15, 4 4 19, 9 9 19, 14 14 19
31 - Tuple test 8 ModifiesS
assign a, a1; variable v; print pn; read rd; call c; while w;
Select <w, w.stmt#, pn> such that Modifies (2, "second")
none
5000
32 - Tuple test 1 ModifiesP
assign a, a1; variable v; print pn; read rd; call c; while w;
Select <v.varName, rd.varName> such that Modifies ("first", v)
var2 var1, var1 var1, assign var1, second var1, var2 var2, var1 var2, assign var2, second var2, var2 second, var1 second, assign second, second second
5000
33 - Tuple test 2 ModifiesP
assign a, a1; variable v; print pn; read rd; call c; while w;
Select <pn.varName, pn.stmt#> such that Modifies ("second", "second")
procedure 1, second 15, pass 19
5000
34 - Tuple test 3 ModifiesP
assign a, a1; variable v; print pn; read rd; call c; procedure p, p1;
Select <p.procName, p, p1> such that Modifies (p, "second")
procedure procedure procedure, first first procedure, second second procedure, procedure procedure first, first first first, second second first, procedure procedure second, first first second, second second second, procedure procedure island, first first island, second second island
5000
35 - Tuple test 1 UsesS
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p;
Select <a, v> such that Uses (a, v)
7 var1, 7 var2, 7 var3, 7 var4, 7 var5, 11 var1, 11 var2, 11 var3, 12 assign, 12 var1, 12 var2, 17 var1, 18 CS3203, 18 A, 18 F
5000
36 - Tuple test 2 UsesS
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p;
Select <a, pn> such that Uses (a, "CS3203")
18 1, 18 15, 18 19
5000
37 - Tuple test 3 UsesS
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p;
Select <c.stmt#, ifs> such that Uses (7, "var5")
2 5, 3 5, 8 5, 10 5, 2 13, 3 13, 8 13, 10 13
5000
38 - Tuple test 4 UsesS
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p;
Select <c.stmt#, ifs> such that Uses (7, "A")
none
5000
39 - Tuple test 1 UsesP
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p;
Select <c.procName, ifs> such that Uses ("island", "pass")
second 5, first 5, second 13, first 13
5000
40 - Tuple test 2 UsesP
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p;
Select <p.procName, p> such that Uses (p, "procedure")
procedure procedure
5000
41 - Tuple test 3 UsesP
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p;
Select <a, a1> such that Uses (p, "falseclause")
none
5000
42 - Tuple test 1 Parent
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p;
Select <w, a> such that Parent(w, a)
4 11
5000
43 - Tuple test 2 Parent
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w, w1; procedure p;
Select <w, a, w1> such that Parent(w, a)
4 11 4, 4 11 9, 4 11 14
5000
44 - Tuple test 3 Parent
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w, w1; procedure p;
Select <w.stmt#, c.procName> such that Parent(w, 5)
4 second, 4 first
5000
45 - Tuple test 4 Parent
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w, w1; procedure p;
Select <w.stmt#, c> such that Parent(3, 5)
none
5000
46 - Tuple test 1 Parent*
assign a, a1; variable v; print pn; read rd; constant c; if ifs; while w, w1; procedure p;
Select <c.value> such that Parent*(w, 7)
7, 15, 123
5000
47 - Tuple test 2 Parent*
assign a, a1; variable v; print pn; read rd; constant c; if ifs; while w, w1; procedure p;
Select <ifs, rd> such that Parent*(ifs, rd)
5 6, 13 16
5000
48 - Tuple test 3 Parent*
assign a, a1; variable v; print pn; read rd; constant c; if ifs; while w, w1; procedure p;
Select <ifs, ifs> such that Parent*(4, 8)
5 5, 13 13
5000
49 - Tuple test 1 Calls
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <p, p1> such that Calls (p, p1)
procedure second, procedure first, first second
5000
50 - Tuple test 2 Calls
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <p, p1> such that Calls(p, _)
procedure procedure, first procedure, procedure first, first first, procedure second, first second, procedure island, first island
5000
51 - Tuple test 3 Calls
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <p, p1> such that Calls (_, p)
second procedure, first procedure, second first, first first, second second, first second, second island, first island
5000
52 - Tuple test 1 Calls*
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <p, p1> such that Calls* (3, "first")
procedure second, procedure first, first second
5000
53 - Tuple test 2 Calls*
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <p, p1> such that Calls*("procedure", "second")
procedure procedure, first procedure, second procedure, island procedure, procedure first, first first, second first, island first, procedure second, first second, second second, island second, procedure island, first island, second island, island island
5000
54 - Tuple test 3 Calls*
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <p, p1> such that Calls*(p, p)
none
5000
55 - Tuple test 1 Next

5000
56 - Tuple test 2 Next

5000
57 - Tuple test 3 Next

5000
58 - Tuple test 1 Next*

5000
59 - Tuple test 2 Next*

5000
60 - Tuple test 3 Next*

5000
61 - Tuple test 1 Assign Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <a, rd> pattern a (_, _)
7 6, 11 6, 12 6, 17 6, 18 6, 7 16, 11 16, 12 16, 17 16, 18 16, 7 20, 11 20, 12 20, 17 20, 18 20
5000
62 - Tuple test 2 Assign Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <a, pn.varName> pattern a ("var1", _(var4 / var5)_)
7 procedure, 7 pass, 7 second
5000
63 - Tuple test 3 Assign Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <a, a.stmt#> pattern a ("assign", _)
12 12
5000
64 - Tuple test 4 Assign Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <a, v> pattern a (v, _"(7/15)"_)
17 var1
5000
65 - Tuple test 5 Assign Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <a, v> pattern a (v, _)
7 var1, 11 var1, 12 assign, 17 var1, 18 CS3203
5000
66 - Tuple test 1 If Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <ifs.stmt#, v.varName> pattern ifs (v, _, _)
5 var1, 5 var5, 13 Second, 13 second
5000
67 - Tuple test 2 If Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <ifs.stmt#, v.varName> pattern ifs ("var5", _, _)
5 var1, 5 var5, 13 Second, 13 second
5000
68 - Tuple test 3 If Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <ifs.stmt#> pattern ifs (_, _, _)
5, 13
5000
69 - Tuple test 1 While Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <w , v> pattern w (v, _)
4 var1, 4 var2, 9 var1, 9 var2, 14 while, 14 While
5000
70 - Tuple test 2 While Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <ifs.stmt#, v.varName> pattern w ("var5", _)
none
5000
71 - Tuple test 3 While Pattern
assign a, a1; variable v; print pn; read rd; call c; if ifs; while w; procedure p, p1;
Select <w.stmt#> pattern w (_, _)
4, 14, 9
5000









